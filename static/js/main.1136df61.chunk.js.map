{"version":3,"sources":["components/MenuButton/menu_button.js","components/Menu/menu.js","components/Square/square.js","utils/tetromino.js","components/Board/board.js","components/ScoreBoard/score_board.js","components/Help/help.js","components/Game/game.js","index.js"],"names":["MenuButton","_ref","onClick","link","text","color","react_default","a","createElement","className","href","Menu","startGame","MenuButton_menu_button","Square","tetrominoColors","O","T","T1","T2","T3","L","L1","L2","L3","Lr","Lr1","Lr2","Lr3","Z","Z1","Zr","Zr1","I","I1","randTetroID","0","1","2","3","4","5","6","randomTetromino","Math","floor","random","tetrominoSquares","position","type","x","y","validTetromino","row","col","board","map","square","includes","Board","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rows","cols","itvlId","paused","speed","state","currentPos","Array","fill","_this2","setState","newGameHandler","setInterval","dropDown","_this3","b","slice","event","_this4","pos","keyCode","ended","newType","rotatedTetromino","clearInterval","_this5","cur","finalBoard","newBoard","cleared","usedSquares","filter","length","push","unshift","clearedLines","newTetro","endGameHandler","_this6","document","addEventListener","inputHandler","i","j","components_Square_square","key","toString","Component","ScoreBoard","score","highscore","Help","Game","curScore","max","Help_help","components_Board_board","newGame","endGame","lines","addScore","ScoreBoard_score_board","App","playing","game","Menu_menu","ReactDOM","render","src_App","getElementById"],"mappings":"gVAWeA,qBARI,SAAAC,GAAkC,IAAhCC,EAAgCD,EAAhCC,QAASC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,MACzC,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACrBH,EAAAC,EAAAC,cAAA,KAAGN,QAASA,EAASQ,KAAMP,EAAMM,UAAW,WAAaJ,EAAQ,iBAC/DD,MCKWO,EAPF,SAAAV,GAAiB,IAAfW,EAAeX,EAAfW,UACd,OAAON,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACrBH,EAAAC,EAAAC,cAACK,EAAD,CAAYX,QAASU,EAAWT,KAAK,IAAIC,KAAK,OAAOC,MAAM,UAC3DC,EAAAC,EAAAC,cAACK,EAAD,CAAYV,KAAK,IAAIC,KAAK,QAAQC,MAAM,iBCC3BS,eALA,SAAAb,GAAa,IAAXI,EAAWJ,EAAXI,MAChB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBAAmBJ,MCJ9BU,EAAkB,CAC9BC,EAAK,SACLC,EAAK,MACLC,GAAM,MACNC,GAAM,MACNC,GAAM,MACNC,EAAK,OACLC,GAAM,OACNC,GAAM,OACNC,GAAM,OACNC,GAAM,OACNC,IAAO,OACPC,IAAO,OACPC,IAAO,OACPC,EAAK,QACLC,GAAM,QACNC,GAAM,QACNC,IAAO,QACPC,EAAK,OACLC,GAAM,QAGDC,EAAc,CACnBC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KACHC,EAAG,IACHC,EAAG,KACHC,EAAG,KAGSC,EAAkB,WAC9B,OAAOR,EAAYS,KAAKC,MAAsB,EAAhBD,KAAKE,YAGvBC,EAAmB,SAACC,EAAUC,GAC1C,IAAMC,EAAIF,EAAS,GAAIG,EAAIH,EAAS,GACpC,OAAQC,GACP,IAAK,IACJ,MAAO,CAAC,CAACC,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC7C,IAAK,IACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC/C,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC7C,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,IAC3C,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC7C,IAAK,IACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC7C,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC7C,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC/C,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,IACjD,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC7C,IAAK,MACJ,MAAO,CAAC,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,EAAE,GAAI,CAACD,EAAGC,EAAE,IACjD,IAAK,MACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,IAC3C,IAAK,MACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC7C,IAAK,IACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC7C,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC/C,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC7C,IAAK,MACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,EAAE,GAAI,CAACD,EAAE,EAAGC,EAAE,IAC/C,IAAK,IACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,GAAI,CAACD,EAAE,EAAGC,IAC3C,IAAK,KACJ,MAAO,CAAC,CAACD,EAAGC,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAGC,EAAE,GAAI,CAACD,EAAGC,EAAE,IAC3C,QACC,OAAO,OAIGC,EAAiB,SAACJ,EAAUC,EAAMI,EAAKC,EAAKC,GAMxD,OALgBR,EAAiBC,EAAUC,GACzBO,IACjB,SAAAC,GAAM,OAAIA,EAAO,IAAM,GAAKA,EAAO,GAAKJ,GACxCI,EAAO,IAAM,GAAKA,EAAO,GAAKH,GACE,SAAhCC,EAAME,EAAO,IAAIA,EAAO,MACfC,UAAS,ICgDLC,cA5Hd,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAPPQ,KAAO,GAMWP,EALlBQ,KAAO,GAKWR,EAJlBS,OAAS,EAIST,EAHlBU,QAAS,EAGSV,EAFlBW,MAAQ,IAIPX,EAAKY,MAAQ,CACZC,WAAY,EAAE,GAAI,GAClBzB,KAAM,KACNM,MAAOoB,MAAMd,EAAKO,MAAMQ,KAAKD,MAAMd,EAAKQ,MAAMO,KAAK,UALnCf,2EASP,IAAAgB,EAAAb,KACVA,KAAKc,SAAS,CACbJ,WAAY,CAAC,EAAG,GAChBzB,KAAMN,IACNY,MAAOoB,MAAMX,KAAKI,MAAMQ,KAAKD,MAAMX,KAAKK,MAAMO,KAAK,WAEpDZ,KAAKJ,MAAMmB,iBACXf,KAAKO,QAAS,EACdP,KAAKM,OAASU,YAAY,kBAAMH,EAAKI,YAAYjB,KAAKQ,4CAG3C,IAAAU,EAAAlB,KACX,GAAuB,OAApBA,KAAKS,MAAMxB,KACb,OAAOe,KAAKS,MAAMlB,MACnB,IAAM4B,EAAInB,KAAKS,MAAMlB,MAAMC,IAAI,SAAAN,GAAC,OAAIA,EAAEkC,UAGtC,OAFArC,EAAiBiB,KAAKS,MAAMC,WAAYV,KAAKS,MAAMxB,MAAMO,IACxD,SAAAC,GAAM,OAAI0B,EAAE1B,EAAO,IAAIA,EAAO,IAAM1C,EAAgBmE,EAAKT,MAAMxB,QACzDkC,uCAGKE,GAAM,IAAAC,EAAAtB,KACZf,EAAOe,KAAKS,MAAMxB,KAClBsC,EAAMvB,KAAKS,MAAMC,WAEvB,OAAOW,EAAMG,SACZ,KAAK,GACJ,GAAGxB,KAAKO,QAAUP,KAAKJ,MAAM6B,MAAO,OAGpC,YAFIrC,EAAe,CAACmC,EAAI,GAAIA,EAAI,GAAG,GAAItC,EAAMe,KAAKI,KAAMJ,KAAKK,KAAML,KAAKS,MAAMlB,QAC9ES,KAAKc,SAAS,CAACJ,WAAY,CAACa,EAAI,GAAIA,EAAI,GAAG,MAE5C,KAAK,GACJ,GAAGvB,KAAKO,QAAUP,KAAKJ,MAAM6B,MAAO,OACpC,IAAIC,EDsCwB,SAAAzC,GAC/B,OAAOA,GACN,IAAK,IACJ,MAAO,IACR,IAAK,IACJ,MAAO,KACR,IAAK,KACJ,MAAO,KACR,IAAK,KACJ,MAAO,KACR,IAAK,KACJ,MAAO,IACR,IAAK,IACJ,MAAO,KACR,IAAK,KACJ,MAAO,KACR,IAAK,KACJ,MAAO,KACR,IAAK,KACJ,MAAO,IACR,IAAK,KACJ,MAAO,MACR,IAAK,MACJ,MAAO,MACR,IAAK,MACJ,MAAO,MACR,IAAK,MACJ,MAAO,KACR,IAAK,IACJ,MAAO,KACR,IAAK,KACJ,MAAO,IACR,IAAK,KACJ,MAAO,MACR,IAAK,MACJ,MAAO,KACR,IAAK,IACJ,MAAO,KACR,IAAK,KACJ,MAAO,IACR,QACC,OAAO,MC/EQ0C,CAAiB1C,GAG/B,YAFIG,EAAemC,EAAKG,EAAS1B,KAAKI,KAAMJ,KAAKK,KAAML,KAAKS,MAAMlB,QACjES,KAAKc,SAAS,CAAC7B,KAAMyC,KAEvB,KAAK,GACJ,GAAG1B,KAAKO,QAAUP,KAAKJ,MAAM6B,MAAO,OAGpC,YAFIrC,EAAe,CAACmC,EAAI,GAAIA,EAAI,GAAG,GAAItC,EAAMe,KAAKI,KAAMJ,KAAKK,KAAML,KAAKS,MAAMlB,QAC7ES,KAAKc,SAAS,CAACJ,WAAY,CAACa,EAAI,GAAIA,EAAI,GAAG,MAE7C,KAAK,GAEJ,MACD,KAAK,GACJ,GAAIvB,KAAKJ,MAAM6B,MACd,OAAOzB,KAAKpD,YACToD,KAAKO,OACRP,KAAKM,OAASU,YAAY,kBAAMM,EAAKL,YAAYjB,KAAKQ,OAEtDoB,cAAc5B,KAAKM,QACpBN,KAAKO,QAAUP,KAAKO,2CAOZ,IAAAsB,EAAA7B,KACJ8B,EAAM9B,KAAKS,MAAMC,WACjBzB,EAAOe,KAAKS,MAAMxB,KACxB,GAAIG,EAAe,CAAC0C,EAAI,GAAG,EAAGA,EAAI,IAAK7C,EAAMe,KAAKI,KAAMJ,KAAKK,KAAML,KAAKS,MAAMlB,OAC7ES,KAAKc,SAAS,CAACJ,WAAY,CAACoB,EAAI,GAAG,EAAGA,EAAI,UACtC,CACJ,IAAMvC,EAAQS,KAAK+B,aACfC,EAAW,GACXC,EAAU,EAGd1C,EAAMC,IAAI,SAAAH,GACT,IAAM6C,EAAc7C,EAAI8C,OAAO,SAAAjD,GAAC,MAAU,SAANA,IAAckD,OAC9B,IAAhBF,GAAqBA,IAAgBL,EAAKxB,KAC7C2B,EAASK,KAAKhD,IAEV6C,IAAgBL,EAAKxB,MACxB4B,IACDD,EAASM,QAAQ3B,MAAMkB,EAAKxB,MAAMO,KAAK,YAK1B,IAAZqB,GACFjC,KAAKJ,MAAM2C,aAAaN,GAEzB,IAAMO,EAAW7D,IACjB,IAAKS,EAAe,CAAC,EAAG,GAAIoD,EAAUxC,KAAKI,KAAMJ,KAAKK,KAAM2B,GAK3D,OAHAhC,KAAKJ,MAAM6C,iBACXb,cAAc5B,KAAKM,aACnBN,KAAKyB,OAAQ,GAIdzB,KAAKc,SAAS,CACbJ,WAAY,CAAC,EAAG,GAChBzB,KAAMuD,EACNjD,MAAOyC,iDAKS,IAAAU,EAAA1C,KAClB2C,SAASC,iBAAiB,UAAW,SAAAvB,GAAK,OAAIqB,EAAKG,aAAaxB,KAAQ,oCAIxE,IAAM9B,EAAQS,KAAK+B,aACnB,OAAOzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACnB8C,EAAMC,IAAI,SAACH,EAAKyD,GAAN,OAAYzD,EAAIG,IAAI,SAACnD,EAAO0G,GAAR,OAC/BzG,EAAAC,EAAAC,cAACwG,EAAD,CAAQC,IAAKH,EAAEI,WAAa,IAAMH,EAAEG,WAAY7G,MAAOA,gBA7HvC8G,aCQLC,SAVI,SAAAnH,GAAwB,IAAtBoH,EAAsBpH,EAAtBoH,MAAOC,EAAerH,EAAfqH,UAC3B,OAAOhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4G,GAC9B/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe6G,MCgBjBC,SArBF,WACZ,OAAOjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,iCAEDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BAEDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,cAEDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,kBCgCY+G,cA7Cd,SAAAA,IAAa,IAAA3D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IACZ3D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0D,GAAArD,KAAAH,QACKS,MAAQ,CACZgB,OAAO,EACP6B,UAAW,EACXD,MAAO,GALIxD,wEASJX,GACRc,KAAKc,SAAS,CACbuC,MAAOrD,KAAKS,MAAM4C,MAAQnE,sCAK3Bc,KAAKc,SAAS,CACbW,OAAO,EACP4B,MAAO,sCAKR,IAAMI,EAAWzD,KAAKS,MAAM4C,MAC5BrD,KAAKc,SAAS,CACbW,OAAO,EACP6B,UAAW1E,KAAK8E,IAAI1D,KAAKS,MAAM6C,UAAWG,sCAInC,IAAA5C,EAAAb,KACR,OAAO1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACrBH,EAAAC,EAAAC,cAACmH,EAAD,MACArH,EAAAC,EAAAC,cAACoH,EAAD,CACCnC,MAAOzB,KAAKS,MAAMgB,MAClBV,eAAgB,kBAAMF,EAAKgD,WAC3BpB,eAAgB,kBAAM5B,EAAKiD,WAC3BvB,aAAc,SAAAwB,GAAK,OAAIlD,EAAKmD,SAASD,MAEtCzH,EAAAC,EAAAC,cAACyH,EAAD,CAAYZ,MAAOrD,KAAKS,MAAM4C,MAAOC,UAAWtD,KAAKS,MAAM6C,oBAxC3CH,aCCbe,cACL,SAAAA,EAAYtE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,IAClBrE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoE,GAAA/D,KAAAH,KAAMJ,KACDa,MAAQ,CAAC0D,SAAS,GAFLtE,2EAMlBG,KAAKc,SAAS,CAACqD,SAAS,qCAGhB,IAAAtD,EAAAb,KACR,OAAQ1D,EAAAC,EAAAC,cAAA,WACLwD,KAAKS,MAAM0D,QAAU7H,EAAAC,EAAAC,cAAC4H,EAAD,MAAS9H,EAAAC,EAAAC,cAAC6H,EAAD,CAAMzH,UAAW,kBAAMiE,EAAKjE,uBAZ7CuG,aAmBlBmB,IAASC,OAAOjI,EAAAC,EAAAC,cAACgI,EAAD,MAAS7B,SAAS8B,eAAe","file":"static/js/main.1136df61.chunk.js","sourcesContent":["import './menu_button.scss';\r\nimport React from 'react';\r\n\r\nconst MenuButton = ({onClick, link, text, color}) => {\r\n\treturn <div className=\"btn-wrap\">\r\n\t\t<a onClick={onClick} href={link} className={\"btn btn-\" + color + \" btn-animated\"}>\r\n\t\t\t{text}\r\n\t\t</a>\r\n\t</div>\r\n};\r\n\r\nexport default MenuButton;","import './menu.scss';\r\nimport React from 'react';\r\nimport MenuButton from '../MenuButton/menu_button';\r\n\r\nconst Menu = ({startGame}) => {\r\n\treturn <div className=\"menu\">\r\n\t\t<MenuButton onClick={startGame} link=\"#\" text=\"Play\" color=\"green\"></MenuButton>\r\n\t\t<MenuButton link=\"#\" text=\"About\" color=\"light-blue\"></MenuButton>\r\n\t</div>;\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport './square.scss';\r\n\r\nconst Square = ({color}) => {\r\n\treturn <div className={\"square square-\" + color}/>;\r\n}\r\n\r\n\r\nexport default Square;","export const tetrominoColors = {\r\n\t'O': \"yellow\",\r\n\t'T': \"red\",\r\n\t'T1': \"red\",\r\n\t'T2': \"red\",\r\n\t'T3': \"red\",\r\n\t'L': \"blue\",\r\n\t'L1': \"blue\",\r\n\t'L2': \"blue\",\r\n\t'L3': \"blue\",\r\n\t'Lr': \"blue\",\r\n\t'Lr1': \"blue\",\r\n\t'Lr2': \"blue\",\r\n\t'Lr3': \"blue\",\r\n\t'Z': \"green\",\r\n\t'Z1': \"green\",\r\n\t'Zr': \"green\",\r\n\t'Zr1': \"green\",\r\n\t'I': \"cyan\",\r\n\t'I1': \"cyan\"\r\n};\r\n\r\nconst randTetroID = {\r\n\t0: \"O\",\r\n\t1: \"T\",\r\n\t2: \"L\",\r\n\t3: \"Lr\",\r\n\t4: \"Z\",\r\n\t5: \"Zr\",\r\n\t6: \"I\"\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n\treturn randTetroID[Math.floor(Math.random() * 7)];\r\n}\r\n\r\nexport const tetrominoSquares = (position, type) => {\r\n\tconst x = position[0], y = position[1];\r\n\tswitch (type) {\r\n\t\tcase \"O\":\r\n\t\t\treturn [[x, y], [x+1, y], [x, y+1], [x+1, y+1]];\r\n\t\tcase \"T\":\r\n\t\t\treturn [[x, y], [x+1, y], [x+1, y-1], [x+1, y+1]];\r\n\t\tcase \"T1\":\r\n\t\t\treturn [[x, y], [x+1, y], [x+2, y], [x+1, y+1]];\r\n\t\tcase \"T2\":\r\n\t\t\treturn [[x, y], [x, y+1], [x, y-1], [x+1, y]];\r\n\t\tcase \"T3\":\r\n\t\t\treturn [[x, y], [x+1, y], [x+2, y], [x+1, y-1]];\r\n\t\tcase \"L\":\r\n\t\t\treturn [[x, y], [x+1, y], [x+2, y], [x+2, y+1]];\r\n\t\tcase \"L1\":\r\n\t\t\treturn [[x, y], [x, y+1], [x, y-1], [x+1, y-1]];\r\n\t\tcase \"L2\":\r\n\t\t\treturn [[x, y], [x, y+1], [x+1, y+1], [x+2, y+1]];\r\n\t\tcase \"L3\":\r\n\t\t\treturn [[x, y+1], [x+1, y+1], [x+1, y], [x+1, y-1]];\r\n\t\tcase \"Lr\":\r\n\t\t\treturn [[x, y], [x+1, y], [x+2, y], [x+2, y-1]];\r\n\t\tcase \"Lr1\":\r\n\t\t\treturn [[x+1, y], [x+1, y+1], [x+1, y-1], [x, y-1]];\r\n\t\tcase \"Lr2\":\r\n\t\t\treturn [[x, y], [x, y+1], [x+1, y], [x+2, y]];\r\n\t\tcase \"Lr3\":\r\n\t\t\treturn [[x, y], [x, y+1], [x, y-1], [x+1, y+1]];\r\n\t\tcase \"Z\":\r\n\t\t\treturn [[x, y], [x, y-1], [x+1, y], [x+1, y+1]];\r\n\t\tcase \"Z1\":\r\n\t\t\treturn [[x, y+1], [x+1, y], [x+2, y], [x+1, y+1]];\r\n\t\tcase \"Zr\":\r\n\t\t\treturn [[x, y], [x, y+1], [x+1, y], [x+1, y-1]];\r\n\t\tcase \"Zr1\":\r\n\t\t\treturn [[x, y], [x+1, y], [x+1, y+1], [x+2, y+1]];\r\n\t\tcase \"I\":\r\n\t\t\treturn [[x, y], [x+1, y], [x+2, y], [x+3, y]];\r\n\t\tcase \"I1\":\r\n\t\t\treturn [[x, y], [x, y-1], [x, y+1], [x, y+2]];\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const validTetromino = (position, type, row, col, board) => {\r\n\tconst squares = tetrominoSquares(position, type);\r\n\tconst r = squares.map(\r\n\t\tsquare => square[0] >= 0 && square[0] < row &&\r\n\t\tsquare[1] >= 0 && square[1] < col && \r\n\t\tboard[square[0]][square[1]] === \"none\");\r\n\treturn !r.includes(false);\r\n};\r\n\r\nexport const rotatedTetromino = type => {\r\n\tswitch(type){\r\n\t\tcase \"O\":\r\n\t\t\treturn \"O\";\r\n\t\tcase \"T\":\r\n\t\t\treturn \"T1\";\r\n\t\tcase \"T1\":\r\n\t\t\treturn \"T2\";\r\n\t\tcase \"T2\":\r\n\t\t\treturn \"T3\";\r\n\t\tcase \"T3\":\r\n\t\t\treturn \"T\";\r\n\t\tcase \"L\":\r\n\t\t\treturn \"L1\";\r\n\t\tcase \"L1\":\r\n\t\t\treturn \"L2\";\r\n\t\tcase \"L2\":\r\n\t\t\treturn \"L3\";\r\n\t\tcase \"L3\":\r\n\t\t\treturn \"L\";\r\n\t\tcase \"Lr\":\r\n\t\t\treturn \"Lr1\";\r\n\t\tcase \"Lr1\":\r\n\t\t\treturn \"Lr2\";\r\n\t\tcase \"Lr2\":\r\n\t\t\treturn \"Lr3\";\r\n\t\tcase \"Lr3\":\r\n\t\t\treturn \"Lr\";\r\n\t\tcase \"Z\":\r\n\t\t\treturn \"Z1\";\r\n\t\tcase \"Z1\":\r\n\t\t\treturn \"Z\";\r\n\t\tcase \"Zr\":\r\n\t\t\treturn \"Zr1\";\r\n\t\tcase \"Zr1\":\r\n\t\t\treturn \"Zr\";\r\n\t\tcase \"I\":\r\n\t\t\treturn \"I1\";\r\n\t\tcase \"I1\":\r\n\t\t\treturn \"I\";\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n};","import './board.scss';\r\nimport React, {Component} from 'react';\r\nimport Square from '../Square/square';\r\nimport { tetrominoColors, tetrominoSquares, validTetromino, rotatedTetromino, randomTetromino } from \"../../utils/tetromino\";\r\n\r\nclass Board extends Component{\r\n\trows = 18\r\n\tcols = 12\r\n\titvlId = 0;\r\n\tpaused = true;\r\n\tspeed = 250;\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentPos: [-1, -1],\r\n\t\t\ttype: null,\r\n\t\t\tboard: Array(this.rows).fill(Array(this.cols).fill(\"none\"))\r\n\t\t};\r\n\t}\r\n\r\n\tstartGame(){\r\n\t\tthis.setState({\r\n\t\t\tcurrentPos: [0, 5],\r\n\t\t\ttype: randomTetromino(),\r\n\t\t\tboard: Array(this.rows).fill(Array(this.cols).fill(\"none\"))\r\n\t\t});\r\n\t\tthis.props.newGameHandler();\r\n\t\tthis.paused = false;\r\n\t\tthis.itvlId = setInterval(() => this.dropDown(), this.speed);\r\n\t}\r\n\r\n\tfinalBoard(){\r\n\t\tif(this.state.type === null)\r\n\t\t\treturn this.state.board;\r\n\t\tconst b = this.state.board.map(x => x.slice());\r\n\t\ttetrominoSquares(this.state.currentPos, this.state.type).map(\r\n\t\t\tsquare => b[square[0]][square[1]] = tetrominoColors[this.state.type])\r\n\t\treturn b;\r\n\t}\r\n\r\n\tinputHandler(event){\r\n\t\tconst type = this.state.type;\r\n\t\tconst pos = this.state.currentPos;\r\n\r\n\t\tswitch(event.keyCode){\r\n\t\t\tcase 37:\t// Left\r\n\t\t\t\tif(this.paused || this.props.ended)\treturn;\r\n\t\t\t\tif (validTetromino([pos[0], pos[1]-1], type, this.rows, this.cols, this.state.board))\r\n\t\t\t\tthis.setState({currentPos: [pos[0], pos[1]-1]});\r\n\t\t\t\treturn;\r\n\t\t\tcase 38: // Up\r\n\t\t\t\tif(this.paused || this.props.ended)\treturn;\r\n\t\t\t\tlet newType = rotatedTetromino(type);\r\n\t\t\t\tif (validTetromino(pos, newType, this.rows, this.cols, this.state.board))\r\n\t\t\t\t\tthis.setState({type: newType});\r\n\t\t\t\treturn;\r\n\t\t\tcase 39: // Right\r\n\t\t\t\tif(this.paused || this.props.ended)\treturn;\r\n\t\t\t\tif (validTetromino([pos[0], pos[1]+1], type, this.rows, this.cols, this.state.board))\r\n\t\t\t\t\tthis.setState({currentPos: [pos[0], pos[1]+1]});\r\n\t\t\t\treturn;\r\n\t\t\tcase 40: // Down\r\n\t\t\t\t// TODO: Increase drop speed \r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // Start/Pause/Restart\r\n\t\t\t\tif (this.props.ended)\r\n\t\t\t\t\treturn this.startGame();\r\n\t\t\t\tif (this.paused)\r\n\t\t\t\t\tthis.itvlId = setInterval(() => this.dropDown(), this.speed);\r\n\t\t\t\telse\r\n\t\t\t\t\tclearInterval(this.itvlId);\r\n\t\t\t\tthis.paused = !this.paused;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tdropDown() {\r\n\t\tconst cur = this.state.currentPos;\r\n\t\tconst type = this.state.type;\r\n\t\tif (validTetromino([cur[0]+1, cur[1]], type, this.rows, this.cols, this.state.board)){\r\n\t\t\tthis.setState({currentPos: [cur[0]+1, cur[1]]});\r\n\t\t}else{\r\n\t\t\tconst board = this.finalBoard();\r\n\t\t\tlet newBoard = [];\r\n\t\t\tlet cleared = 0;\r\n\r\n\t\t\t// Count the amount of cleared lines and build the updated board\r\n\t\t\tboard.map(row => {\r\n\t\t\t\tconst usedSquares = row.filter(x => x !== \"none\").length;\r\n\t\t\t\tif (usedSquares !== 0 && usedSquares !== this.cols)\r\n\t\t\t\t\tnewBoard.push(row);\r\n\t\t\t\telse{\r\n\t\t\t\t\tif (usedSquares === this.cols)\r\n\t\t\t\t\t\tcleared++;\r\n\t\t\t\t\tnewBoard.unshift(Array(this.cols).fill(\"none\"));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Callback to inscrease score\r\n\t\t\tif(cleared !== 0)\r\n\t\t\t\tthis.props.clearedLines(cleared);\r\n\r\n\t\t\tconst newTetro = randomTetromino();\r\n\t\t\tif (!validTetromino([0, 5], newTetro, this.rows, this.cols, newBoard)){\r\n\t\t\t\t// GAMEOVER\r\n\t\t\t\tthis.props.endGameHandler();\r\n\t\t\t\tclearInterval(this.itvlId);\r\n\t\t\t\tthis.ended = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentPos: [0, 5],\r\n\t\t\t\ttype: newTetro,\r\n\t\t\t\tboard: newBoard\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tdocument.addEventListener(\"keydown\", event => this.inputHandler(event), false);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst board = this.finalBoard();\r\n\t\treturn <div className=\"board\">\r\n\t\t\t{ board.map((row, i) => row.map((color, j) =>\r\n\t\t\t\t<Square key={i.toString() + \" \" + j.toString()} color={color}/>)) }\r\n\t\t</div>\r\n\t}\r\n}\r\n\r\n\r\nexport default Board;","import './score_board.scss';\r\nimport React from 'react';\r\n\r\nconst ScoreBoard = ({score, highscore}) => {\r\n\treturn <div className=\"score-board\">\r\n\t\t<div className=\"score-label\">SCORE</div>\r\n\t\t<div className=\"score-value\">{score}</div>\r\n\t\t<div className=\"score-label\">HIGHSCORE</div>\r\n\t\t<div className=\"score-value\">{highscore}</div>\r\n\t</div>;\r\n}\r\n\r\n\r\nexport default ScoreBoard;","import './help.scss';\r\nimport React from 'react';\r\n\r\nconst Help = () => {\r\n\treturn <div className=\"help\">\r\n\t\t<div className=\"desc-item\">\r\n\t\t\t<span>Space - </span>\r\n\t\t\t<span className=\"description\">Start/Pause/Restart the game</span>\r\n\t\t</div>\r\n\t\t<div className=\"desc-item\">\r\n\t\t\t<span>Up Arrow - </span>\r\n\t\t\t<span className=\"description\">Rotate CounterClockwise</span>\r\n\t\t</div>\r\n\t\t<div className=\"desc-item\">\r\n\t\t\t<span>Left Arrow - </span>\r\n\t\t\t<span className=\"description\">Move Left</span>\r\n\t\t</div>\r\n\t\t<div className=\"desc-item\">\r\n\t\t\t<span>Right Arrow - </span>\r\n\t\t\t<span className=\"description\">Move Right</span>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nexport default Help;","import React, {Component} from 'react';\r\nimport Board from '../Board/board';\r\nimport ScoreBoard from '../ScoreBoard/score_board';\r\nimport Help from '../Help/help';\r\n\r\nclass Game extends Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tended: true,\r\n\t\t\thighscore: 0,\r\n\t\t\tscore: 0,\r\n\t\t}\r\n\t}\r\n\r\n\taddScore(x) {\r\n\t\tthis.setState({\r\n\t\t\tscore: this.state.score + x\r\n\t\t});\r\n\t}\r\n\r\n\tnewGame(){\r\n\t\tthis.setState({\r\n\t\t\tended: false,\r\n\t\t\tscore: 0\r\n\t\t})\r\n\t}\r\n\r\n\tendGame(){\r\n\t\tconst curScore = this.state.score;\r\n\t\tthis.setState({\r\n\t\t\tended: true,\r\n\t\t\thighscore: Math.max(this.state.highscore, curScore)\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <div className=\"game\">\r\n\t\t\t<Help/>\r\n\t\t\t<Board\r\n\t\t\t\tended={this.state.ended}\r\n\t\t\t\tnewGameHandler={() => this.newGame()}\r\n\t\t\t\tendGameHandler={() => this.endGame()}\r\n\t\t\t\tclearedLines={lines => this.addScore(lines)}\r\n\t\t\t/>\r\n\t\t\t<ScoreBoard score={this.state.score} highscore={this.state.highscore}/>\r\n\t\t</div>\r\n\t}\r\n} \r\n\r\n\r\nexport default Game;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.scss';\nimport Menu from './components/Menu/menu';\nimport Game from './components/Game/game';\n\nclass App extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {playing: false}\n\t}\n\n\tstartGame() {\n\t\tthis.setState({playing: true})\n\t}\n\n\trender() {\n\t\treturn (<div>\n\t\t\t{ this.state.playing ? <Game/>: <Menu startGame={() => this.startGame()}/> }\n\t\t</div>)\n\t}\n}\n\n//=================================>\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}